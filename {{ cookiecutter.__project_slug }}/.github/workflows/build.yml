# Builds application and uploads package to PyPi

name: build

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '**.md'
      - '**.txt'
      - '.[a-z]+'
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+*'

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    needs: set-matrix
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}

    strategy:
      matrix: {% raw %}${{ fromJson(needs.set-matrix.outputs.matrix) }}{% endraw %}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python {% raw %}${{ matrix.python_version }}{% endraw %}
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ matrix.python_version }}{% endraw %}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch pre-commit
        hatch env create
    - name: Lint and typecheck
      run: |
        hatch run lint:all
    - name: Run Tests
      run: |
        hatch run test:cov --cov-report=xml
    - uses: codecov/codecov-action@v4
      with:
        token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
        fail_ci_if_error: true
        verbose: true

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch pre-commit
    - name: Build
      run: |
        hatch build
    - name: Publish ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        packages-dir: dist/
        repository-url: https://test.pypi.org/legacy/
    - name: Check SemVer Tag
      id: check-tag
      run: |
        if [[ {% raw %}${{ github.event.ref }}{% endraw %} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
         echo "match=true" >> $GITHUB_OUTPUT
        fi
    - name: Publish ðŸ“¦ to PyPI
      if: steps.check-tag.outputs.match == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/

  # Prefix job to dynamically calculate matrix
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: {% raw %}${{ steps.set-matrix.outputs.MATRIX }}{% endraw %}
    steps:
      - name: Set Matrix
        id: set-matrix
        run: |
          MATRIX_DEFAULT='{"os": ["ubuntu-latest"], "python_version": ["3.11"]}'
          MATRIX_ALL='{"os": ["ubuntu-latest", "macos-latest"], "python_version": ["3.11", "3.12"]}'

          if [[ "{% raw %}${{ github.event_name }}{% endraw %}" == "release" ]]; then
            echo "MATRIX=$MATRIX_ALL" >> "$GITHUB_OUTPUT"
            exit
          fi

          if [[ "{% raw %}${{ github.event_name }}{% endraw %}" == "pull_request" ]]; then
            echo "MATRIX=$MATRIX_DEFAULT" >> "$GITHUB_OUTPUT"
            exit
          fi

          if [[ "{% raw %}${{ github.event_name }}{% endraw %}" == "push" &&
                "{% raw %}${{ startsWith(github.ref, 'refs/tags/') }}{% endraw %}" == "true"
          ]]; then
            echo "MATRIX=$MATRIX_ALL" >> "$GITHUB_OUTPUT"
            exit
          fi

          echo "MATRIX=$MATRIX_DEFAULT" >> "$GITHUB_OUTPUT"
